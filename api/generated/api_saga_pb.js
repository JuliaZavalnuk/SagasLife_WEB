/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.saga.api.Response', null, global);
goog.exportSymbol('proto.saga.api.User', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.saga.api.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.saga.api.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.saga.api.User.displayName = 'proto.saga.api.User';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.saga.api.User.prototype.toObject = function(opt_includeInstance) {
  return proto.saga.api.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.saga.api.User} msg The msg instance to transform.
 * @return {!Object}
 */
proto.saga.api.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: msg.getEmail(),
    password: msg.getPassword()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.saga.api.User} The clone.
 */
proto.saga.api.User.prototype.cloneMessage = function() {
  return /** @type {!proto.saga.api.User} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.saga.api.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.saga.api.User.prototype.setEmail = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.saga.api.User.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.saga.api.User.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.saga.api.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.saga.api.Response.repeatedFields_, null);
};
goog.inherits(proto.saga.api.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.saga.api.Response.displayName = 'proto.saga.api.Response';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.saga.api.Response.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.saga.api.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.saga.api.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.saga.api.Response} msg The msg instance to transform.
 * @return {!Object}
 */
proto.saga.api.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    userList: jspb.Message.toObjectList(msg.getUserList(),
    proto.saga.api.User.toObject, includeInstance),
    res: msg.getRes()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.saga.api.Response} The clone.
 */
proto.saga.api.Response.prototype.cloneMessage = function() {
  return /** @type {!proto.saga.api.Response} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated User user = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.saga.api.User>}
 */
proto.saga.api.Response.prototype.getUserList = function() {
  return /** @type{!Array.<!proto.saga.api.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.saga.api.User, 1));
};


/** @param {Array.<!proto.saga.api.User>} value  */
proto.saga.api.Response.prototype.setUserList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.saga.api.Response.prototype.clearUserList = function() {
  this.setUserList([]);
};


/**
 * optional bool res = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.saga.api.Response.prototype.getRes = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.saga.api.Response.prototype.setRes = function(value) {
  jspb.Message.setField(this, 2, value);
};


goog.object.extend(exports, proto.saga.api);
